{"version":3,"sources":["BalanceHistory.js","App.js","index.js"],"names":["initConfigData","data","xField","yField","minColumnWidth","maxColumnWidth","BalanceHistory","useState","month","setMonth","dataForChartDaily","setDataForDailyChart","loading","PnLitem","setPnLItem","year","setYear","_config","setConfig","Ws","setWS","totalEthBalance","setTotalEthBalance","totalUSDBalance","setTotalUSDBalance","WsState","setWsState","dailyPNL","setDailyPnl","monthlyPNL","setMonthlyPnl","yearlyPNL","setYearlyPnl","usdt","usdc","dai","tokenBalance","setTokenBalance","useEffect","wss","WebSocket","window","location","host","onmessage","e","res","JSON","parse","error","notification","message","description","TotalEthBalance","TotalUSDBalance","PNLItem","onopen","nowDate","Date","_month","getFullYear","getMonth","send","stringify","Year","Month","split","tooltip","customContent","title","className","mappingData","_origin","EPnl","DPnl","color","date","filter","item","onChangeDate","a","target","value","_year","style","position","width","type","onChange","boxShadow","height","onClick","top","left","App","src","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d50c85f8.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/plots\";\r\nimport { notification } from \"antd\";\r\nconst initConfigData = {\r\n    data: [],\r\n    xField: 'date',\r\n    yField: 'EPnl',\r\n\r\n    minColumnWidth: 10,\r\n    maxColumnWidth: 10,\r\n};\r\n\r\nconst BalanceHistory = () => {\r\n    const [month, setMonth] = useState(\"\")\r\n    const [dataForChartDaily, setDataForDailyChart] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [PnLitem, setPnLItem] = useState(\"D\");\r\n    const [year, setYear] = useState(\"\");\r\n    const [_config, setConfig] = useState(initConfigData);\r\n    const [Ws, setWS] = useState({});\r\n    const [totalEthBalance, setTotalEthBalance] = useState(0);\r\n    const [totalUSDBalance, setTotalUSDBalance] = useState(0);\r\n    const [WsState, setWsState] = useState(false);\r\n    const [dailyPNL, setDailyPnl] = useState(0);\r\n    const [monthlyPNL, setMonthlyPnl] = useState(0);\r\n    const [yearlyPNL, setYearlyPnl] = useState(0);\r\n    const [tokenBalance, setTokenBalance] = useState({usdt:0, usdc:0, dai:0});\r\n    useEffect(() => {\r\n        let wss = new WebSocket(`ws://${window.location.host}`);\r\n        setWS(wss);\r\n        //console.log(wss)\r\n        wss.onmessage = (e) => {\r\n            let res = JSON.parse(e.data);\r\n            // console.log(res, \"res\")\r\n            if (res.data.error) {\r\n                // console.log(res.data.error);\r\n                notification.error({\r\n                    message: \"Server Error\",\r\n                    description: res.data.error\r\n                });\r\n                setDataForDailyChart([])\r\n                return;\r\n            }\r\n            else {\r\n                setDataForDailyChart(res.data.data);\r\n                setTotalEthBalance(res.data.TotalEthBalance);\r\n                setTotalUSDBalance(res.data.TotalUSDBalance);\r\n                setPnLItem(res.PNLItem);\r\n                setDailyPnl(res.data.dailyPNL);\r\n                setMonthlyPnl(res.data.monthlyPNL);\r\n                setYearlyPnl(res.data.yearlyPNL);\r\n                setTokenBalance(res.data.tokenBalance)\r\n            }\r\n        }\r\n        wss.onopen = (e) => {\r\n            setWsState(true);\r\n        }\r\n\r\n\r\n        const nowDate = new Date();\r\n        const _month = nowDate.getFullYear() + \"-\" + (nowDate.getMonth() + 1);\r\n\r\n        setMonth(_month);\r\n        setYear(nowDate.getFullYear());\r\n\r\n\r\n    }, []);\r\n    useEffect(() => {\r\n        // console.log(Ws)\r\n        if (Ws && year && WsState)\r\n            Ws.send(JSON.stringify({ Year: year, Month: month.split(\"-\")[1] * 1, PNLItem: PnLitem }));\r\n\r\n    }, [PnLitem, year]);\r\n    useEffect(() => {\r\n        if (PnLitem == \"D\" && Ws && month && WsState)\r\n            Ws.send(JSON.stringify({ Year: year, Month: month.split(\"-\")[1] * 1, PNLItem: PnLitem }));\r\n\r\n    }, [month, WsState]);\r\n    useEffect(() => {\r\n        setConfig({\r\n            data: [...dataForChartDaily],\r\n            xField: 'date',\r\n            yField: 'EPnl',\r\n            tooltip: {\r\n                customContent: (title, data) => {\r\n                    if (data[0]) {\r\n                        return (<div className=\"\">\r\n                            <div className=\"pl-1 text-info\">\r\n                                *EPnL\r\n                            </div>\r\n                            <div className=\" col pl-5 rtl\">\r\n                                {data[0].mappingData._origin.EPnl}ETH\r\n                            </div>\r\n                            <div className=\"pl-1 text-success\">\r\n                                *USDPnL\r\n                            </div>\r\n                            <div className=\" col pl-5 rtl \" >\r\n                                {data[0].mappingData._origin.DPnl}USD\r\n                            </div>\r\n\r\n                        </div>)\r\n                    }\r\n                }\r\n            },\r\n            color:({date})=>{\r\n                return dataForChartDaily.filter((item)=>{\r\n                    return item.date == date\r\n                })[0].EPnl*1 >=0 ?\"#10a4e9\":\"#e93b10\";\r\n            }\r\n\r\n        })\r\n    }, [dataForChartDaily])\r\n    const onChangeDate = async (e) => {\r\n        setMonth(e.target.value);\r\n        let _year = e.target.value.split(\"-\")[0];\r\n        setYear(_year);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"rounded shadow p-5 bg-dark2\" style={{ position: \"relative\" }} >\r\n            <div className=\" d-flex justify-content-center\" >\r\n                <div style={{ width: \"500px\" }}>\r\n                    <h5 className=\"\">\r\n                        TOTAL AMOUNT :\r\n                        &nbsp;\r\n                        &nbsp;\r\n                        &nbsp;\r\n                        <span className=\"bg-dark\">{totalEthBalance}ETH</span>\r\n                        &nbsp;\r\n                        &nbsp;\r\n                        &nbsp;\r\n                        <span className=\"bg-dark1\">{totalUSDBalance}$</span>\r\n                    </h5>\r\n                </div>\r\n                <div className=\"pl-3\">\r\n\r\n                    <input type=\"month\" className=\" form-control\" value={month} onChange={onChangeDate} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"d-flex justify-content-center pl-5\">\r\n                <div className=\"col\">\r\n                    Daily:\r\n                    <span className=\"bg-dark1 border border-dark rounded p-2 ml-3 \" style={{ boxShadow: \"0px 0px 5px rgba(1,1,1,0.5)\" }}>\r\n                        {dailyPNL >= 0 ? <span className=\"text-success\">{dailyPNL} ETH</span>:<span className=\"text-danger\">{dailyPNL} ETH</span>}\r\n                    </span>\r\n\r\n                </div>\r\n                <div className=\"col\">\r\n                    Monthly:\r\n                    <span className=\"bg-dark1 border border-dark rounded p-2 ml-3 \" style={{ boxShadow: \"0px 0px 5px rgba(1,1,1,0.5)\" }}>\r\n                    {monthlyPNL >= 0 ? <span className=\"text-success\">{monthlyPNL} ETH</span>:<span className=\"text-danger\">{monthlyPNL} ETH</span>}\r\n                    </span>\r\n\r\n                </div>\r\n                <div className=\"col\">\r\n                    yearly:\r\n                    <span className=\"bg-dark1 border border-dark rounded p-2 ml-3 \" style={{ boxShadow: \"0px 0px 5px rgba(1,1,1,0.5)\" }}>\r\n                    {yearlyPNL >= 0 ? <span className=\"text-success\">{yearlyPNL} ETH</span>:<span className=\"text-danger\">{yearlyPNL} ETH</span>}\r\n                    </span>\r\n\r\n                </div>\r\n                <div className=\"col\">\r\n                    USDT:\r\n                    <span className=\"bg-dark1 border border-dark rounded p-2 ml-3 \" style={{ boxShadow: \"0px 0px 5px rgba(1,1,1,0.5)\" }}>\r\n                       {tokenBalance.usdt}\r\n                    </span>\r\n\r\n                </div>\r\n                <div className=\"col\">\r\n                    USDC:\r\n                    <span className=\"bg-dark1 border border-dark rounded p-2 ml-3 \" style={{ boxShadow: \"0px 0px 5px rgba(1,1,1,0.5)\" }}>\r\n                       {tokenBalance.usdc}\r\n                    </span>\r\n\r\n                </div>\r\n                <div className=\"col\">\r\n                    DAI:\r\n                    <span className=\"bg-dark1 border border-dark rounded p-2 ml-3 \" style={{ boxShadow: \"0px 0px 5px rgba(1,1,1,0.5)\" }}>\r\n                        {tokenBalance.dai}\r\n                    </span>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\" p-5\" >\r\n                <div className=\"p-5\" style={{ filter: loading ? \"blur(2px)\" : \"blur(0px)\", height: \"40vh\" }} >\r\n                    <div className=\"d-flex justify-content-end\">\r\n\r\n                        <div className=\"btn-group\">\r\n                            <button onClick={e => { setPnLItem(\"D\") }} className={PnLitem == \"D\" ? \" btn btn-sm btn-dark\" : \"btn btn-sm btn-secondary\"}> Daily</button>\r\n                            <button onClick={e => { setPnLItem(\"M\") }} className={PnLitem == \"M\" ? \"btn btn-sm btn-dark\" : \"btn btn-sm btn-secondary\"}> Monthly</button>\r\n                            <button onClick={e => { setPnLItem(\"Y\") }} className={PnLitem == \"Y\" ? \"btn btn-sm btn-dark\" : \"btn btn-sm btn-secondary\"}> Yearly</button>\r\n                        </div>\r\n                    </div>\r\n                    <Column {..._config} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {loading && (<span className=\"spinner-border  text-white\" style={{ height: \"5em\", width: \"5em\", position: \"relative\", top: \"-200px\", left: \"50%\" }}></span>)}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default BalanceHistory;","\r\nimport 'antd/dist/antd.css';\r\nimport './css/App.css';\r\n\r\nimport BalanceHistory from \"./BalanceHistory\"\r\nfunction App() {\r\n\r\n\treturn (\r\n\t<div className=\"page-layout\">\r\n\t\t<div className=' bg-dark2 p-1 pt-3  pl-4 shadow d-flex '>\r\n\t\t\t<h4 className='center'><img src='/logo192.png' width={70} ></img>PNL History</h4>\r\n\t\t</div>\r\n\t\t<main>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t<BalanceHistory/>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n      <App />\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}